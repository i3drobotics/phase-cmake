name: Pull Request

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

env:
  PHASE_VERSION: v0.2.0
  PHASE_REPO: i3drobotics/phase

jobs:
  # Build / test
  build-ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v2
      # Install Phase
      - name: Download Phase
        shell: bash
        run: |
          curl --output phase-${{ env.PHASE_VERSION }}-${{ matrix.os }}-x86_64.tar.gz -L https://github.com/i3drobotics/phase/releases/download/${{ env.PHASE_VERSION }}/phase-${{ env.PHASE_VERSION }}-${{ matrix.os }}-x86_64.tar.gz
      - name: Install Phase
        shell: bash
        run: |
          mkdir phase_install
          tar -xf phase-${{ env.PHASE_VERSION }}-${{ matrix.os }}-x86_64.tar.gz -C ./phase_install
          sudo apt update
          sudo apt install -y libavcodec-dev libavformat-dev libswscale-dev
          sudo apt install -y libgl-dev liblapack-dev libblas-dev libgtk2.0-dev
          sudo apt install -y libgstreamer1.0-0 libgstreamer-plugins-base1.0-0
          sudo apt install -y zlib1g libstdc++6
          sudo apt install -y libc6 libgcc1
          sudo apt install -y patchelf
      # Build
      - name: Build
        shell: bash
        run: |
          mkdir -p build && cd build
          sudo apt-get update && cmake -DPhase_DIR="./phase_install/lib/cmake" -DCMAKE_INSTALL_PREFIX="../install" ..
          make -j$(nproc)
      # Test
      - name: Test
        shell: bash
        run: |
          cd build/bin
          ./phase_sample
